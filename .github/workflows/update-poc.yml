name: Update CMH POC

env:
  SERVICE_PROJECT_NAME: CMH.Priority
  PROCESS_PROJECT_NAME: CMH.Process
  STATISTICS_PROJECT_NAME: CMH.Statistics
  SIMULATOR_PROJECT_NAME: CMH.Simulator
  SERVICE_NAME: as-cmh-service
  PROCESS_NAME: af-cmh-process
  STATISTICS_NAME: af-cmh-statistics
  SIMULATOR_NAME: as-cmh-simulator
  DOTNET_VERSION: '6.0'
  CI: true

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    name: Unit Testing
    steps:
      - uses: actions/checkout@v2.1.0
      - run: dotnet test
          
  build-service:
    runs-on: ubuntu-latest
    needs: unit-test
    name: Build Service

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v3

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build ${{env.SERVICE_PROJECT_NAME}}
        run: dotnet build ${{env.SERVICE_PROJECT_NAME}} -c Release 

      - name: Publish ${{env.SERVICE_PROJECT_NAME}}
        run: dotnet publish ${{env.SERVICE_PROJECT_NAME}} -c Release -o ${{env.DOTNET_ROOT}}/${{env.SERVICE_PROJECT_NAME}}

      - name: Upload ${{env.SERVICE_PROJECT_NAME}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.SERVICE_PROJECT_NAME}}
          path: ${{env.DOTNET_ROOT}}/${{env.SERVICE_PROJECT_NAME}}
          
  build-process:
    runs-on: ubuntu-latest
    needs: unit-test
    name: Build Process

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v3

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build ${{env.PROCESS_PROJECT_NAME}}
        run: dotnet build ${{env.PROCESS_PROJECT_NAME}} -c Release 

      - name: Publish ${{env.PROCESS_PROJECT_NAME}}
        run: dotnet publish ${{env.PROCESS_PROJECT_NAME}} -c Release -o ${{env.DOTNET_ROOT}}/${{env.PROCESS_PROJECT_NAME}}

      - name: Upload ${{env.PROCESS_PROJECT_NAME}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.PROCESS_PROJECT_NAME}}
          path: ${{env.DOTNET_ROOT}}/${{env.PROCESS_PROJECT_NAME}}
          
  build-statistics:
    runs-on: ubuntu-latest
    needs: unit-test
    name: Build Statistics

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v3

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build ${{env.STATISTICS_PROJECT_NAME}}
        run: dotnet build ${{env.STATISTICS_PROJECT_NAME}} -c Release 

      - name: Publish ${{env.STATISTICS_PROJECT_NAME}}
        run: dotnet publish ${{env.STATISTICS_PROJECT_NAME}} -c Release -o ${{env.DOTNET_ROOT}}/${{env.STATISTICS_PROJECT_NAME}}

      - name: Upload ${{env.STATISTICS_PROJECT_NAME}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.STATISTICS_PROJECT_NAME}}
          path: ${{env.DOTNET_ROOT}}/${{env.STATISTICS_PROJECT_NAME}}
          
  build-simulator:
    runs-on: ubuntu-latest
    needs: unit-test
    name: Build Simulator

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v3

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build ${{env.SIMULATOR_PROJECT_NAME}}
        run: dotnet build ${{env.SIMULATOR_PROJECT_NAME}} -c Release 

      - name: Publish ${{env.SIMULATOR_PROJECT_NAME}}
        run: dotnet publish ${{env.SIMULATOR_PROJECT_NAME}} -c Release -o ${{env.DOTNET_ROOT}}/${{env.SIMULATOR_PROJECT_NAME}}

      - name: Upload ${{env.SIMULATOR_PROJECT_NAME}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.SIMULATOR_PROJECT_NAME}}
          path: ${{env.DOTNET_ROOT}}/${{env.SIMULATOR_PROJECT_NAME}}

  deploy-service:
    runs-on: ubuntu-latest
    needs: build-service
    name: Deploy Service
    environment:
      name: 'Production'
      url: ${{ steps.deploy-service.outputs.webapp-url }}

    steps:
      - name: Download ${{env.SERVICE_PROJECT_NAME}}
        uses: actions/download-artifact@v3
        with:
          name: ${{env.SERVICE_PROJECT_NAME}}

      - name: Deploy to Azure App service ${{ env.SERVICE_NAME }}
        id: deploy-service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_SERVICE_PUBLISH_PROFILE }}
          package: .
          
  deploy-process:
    runs-on: ubuntu-latest
    needs: build-process
    name: Deploy Process
    environment:
      name: 'Production'
      url: ${{ steps.deploy-process.outputs.webapp-url }}

    steps:
      - name: Download ${{env.PROCESS_PROJECT_NAME}}
        uses: actions/download-artifact@v3
        with:
          name: ${{env.PROCESS_PROJECT_NAME}}

      - name: Deploy to Azure App service ${{ env.PROCESS_NAME }}
        id: deploy-process
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.PROCESS_NAME }}
          publish-profile: ${{ secrets.AZURE_PROCESS_PUBLISH_PROFILE }}
          package: .
          
  deploy-statistics:
    runs-on: ubuntu-latest
    needs: build-statistics
    name: Deploy Statistics
    environment:
      name: 'Production'
      url: ${{ steps.deploy-process.outputs.webapp-url }}

    steps:
      - name: Download ${{env.STATISTICS_PROJECT_NAME}}
        uses: actions/download-artifact@v3
        with:
          name: ${{env.STATISTICS_PROJECT_NAME}}

      - name: Deploy to Azure App service ${{ env.STATISTICS_NAME }}
        id: deploy-statistics
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.PROCESS_STATISTICS }}
          publish-profile: ${{ secrets.AZURE_STATISTICS_PUBLISH_PROFILE }}
          package: .
          
  deploy-simulate:
    runs-on: ubuntu-latest
    needs: build-simulator
    name: Deploy Simulator
    environment:
      name: 'Production'
      url: ${{ steps.deploy-simulator.outputs.webapp-url }}

    steps:
      - name: Download ${{env.SIMULATOR_PROJECT_NAME}}
        uses: actions/download-artifact@v3
        with:
          name: ${{env.SIMULATOR_PROJECT_NAME}}

      - name: Deploy to Azure App service ${{ env.SIMULATOR_NAME }}
        id: deploy-simulator
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.SIMULATOR_NAME }}
          publish-profile: ${{ secrets.AZURE_SIMULATOR_PUBLISH_PROFILE }}
          package: .
