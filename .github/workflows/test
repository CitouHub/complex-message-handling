name: Release

env:
  SERVICE_PROJECT_NAME: CMH.Priority
  PROCESS_PROJECT_NAME: CMH.Process
  SIMULATE_PROJECT_NAME: CMH.Simulate
  SERVICE_NAME: as-cmh-service
  PROCESS_NAME: af-cmh-process
  SIMULATE_NAME: as-cmh-simulate
  DOTNET_VERSION: '6.0'
  RELEASE_TAG_INPUT: ${{ github.event.release.tag_name }}
  BUILD_ID: ${{ github.run_number }}
  COMMIT_ID: ${{ github.sha }}
  CI: false

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    name: Unit Testing
    steps:
      - uses: actions/checkout@v2.1.0
      - run: dotnet test
          
  build-service:
    runs-on: ubuntu-latest
    needs: unit-test
    name: Build service

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v3

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build ${{env.SERVICE_PROJECT_NAME}}
        run: dotnet build ${{env.SERVICE_PROJECT_NAME}} -c Release 

      - name: Publish ${{env.SERVICE_PROJECT_NAME}}
        run: dotnet publish ${{env.SERVICE_PROJECT_NAME}} -c Release -p:CommitId=$COMMIT_ID -p:BuildId=$BUILD_ID -p:BuildTag=$RELEASE_TAG_INPUT -o ${{env.DOTNET_ROOT}}/${{env.SERVICE_PROJECT_NAME}}

      - name: Upload ${{env.SERVICE_PROJECT_NAME}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.SERVICE_PROJECT_NAME}}
          path: ${{env.DOTNET_ROOT}}/${{env.SERVICE_PROJECT_NAME}}

  deploy-service:
    runs-on: ubuntu-latest
    needs: build-service
    name: Deploy service
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download ${{env.SERVICE_PROJECT_NAME}}
        uses: actions/download-artifact@v3
        with:
          name: ${{env.SERVICE_PROJECT_NAME}}

      - name: Deploy to Azure App service ${{ env.SERVICE_NAME }}
        id: deploy-to-service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_SERVICE_PUBLISH_PROFILE }}
          package: .
